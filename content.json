{"meta":{"title":"寇强的个人空间","subtitle":"个人博客","description":"自建博客页面","author":"寇强","url":"http://kouqiang.space","root":"/"},"pages":[{"title":"所有分类","date":"2023-01-09T08:58:56.844Z","updated":"2023-01-09T08:58:56.844Z","comments":true,"path":"categories/index.html","permalink":"http://kouqiang.space/categories/index.html","excerpt":"","text":""},{"title":"more","date":"2023-01-09T08:55:01.000Z","updated":"2023-01-09T08:55:01.761Z","comments":true,"path":"more/index.html","permalink":"http://kouqiang.space/more/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2023-01-09T09:00:48.705Z","updated":"2023-01-09T09:00:48.705Z","comments":true,"path":"friends/index.html","permalink":"http://kouqiang.space/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"所有标签","date":"2023-01-09T08:59:23.362Z","updated":"2023-01-09T08:59:23.362Z","comments":true,"path":"tags/index.html","permalink":"http://kouqiang.space/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"24考研408笔记A——数据结构与算法","slug":"24考研408笔记A——数据结构与算法","date":"2023-02-28T13:10:00.000Z","updated":"2023-02-28T13:10:57.684Z","comments":true,"path":"2023/02/28/24考研408笔记A——数据结构与算法/","link":"","permalink":"http://kouqiang.space/2023/02/28/24%E8%80%83%E7%A0%94408%E7%AC%94%E8%AE%B0A%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/","excerpt":"","text":"","categories":[{"name":"考研408笔记","slug":"考研408笔记","permalink":"http://kouqiang.space/categories/%E8%80%83%E7%A0%94408%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"考研笔记","slug":"考研笔记","permalink":"http://kouqiang.space/tags/%E8%80%83%E7%A0%94%E7%AC%94%E8%AE%B0/"},{"name":"数据结构","slug":"数据结构","permalink":"http://kouqiang.space/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"http://kouqiang.space/tags/%E7%AE%97%E6%B3%95/"}],"author":"寇强"},{"title":"SU动态组件学习","slug":"SU动态组件学习","date":"2023-01-20T04:09:00.000Z","updated":"2023-01-28T14:29:37.202Z","comments":true,"path":"2023/01/20/SU动态组件学习/","link":"","permalink":"http://kouqiang.space/2023/01/20/SU%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6%E5%AD%A6%E4%B9%A0/","excerpt":"","text":"SU动态组件一、各种函数认识（一）数学函数 ABS(number) 求整数的绝对值 1alert(abs(-127)) CEILING(number,significance) 将参数number向上(沿绝对值增大方向)取值，取到最接近significance的倍数。比如： 1234CEILING(-2.5,-2);//输出为-4！CEILING(3.14159,100);//输出为100！ 注：两个参数符号必须一致！ DEGREES(number) 将弧度值转换为角度值，如： 12alert(degrees(pi()));//输出180 EVEN(number) 将参数number向上(沿绝对值增大方向)取值，取到最接近的偶数。比如： 12EVEN(5)//输出6 EXP(number) exp(x)表示的是e的x次方，x可以是一个函数。 FLOOR(number,significance) 将参数number向下(沿绝对值减小方向)取值，取到最接近significance的倍数。比如： 1234FLOOR(-2.56,-2) //返回-2FLOOR(99.99,20) //返回80 INT(number) 舍去小数，向下取整。 ISEVEN(NUMBER) 判断参数是否为偶数，是则返回1，否则返回0。 ISODD(number) 判断参数是否为奇数，是则返回1，否则返回0。 LN(number) 计算参数的自然对数，与EXP()互为反函数。 LOG10(number) 计算以10为底、输入参数的对数。 ODD(number) 将一个不是奇数的数值向上舍入为最接近的奇数： 12alert(odd(10)); //输出11 POWER(base,power) 计算base的power次幂的值： 123456power(5,2); //5的2次方，返回25power(6.6,2.5); //6.6的2.5次方，返回111.9.7666power(6.6,1/4); //6.6的1/4次方，返回1.602825 PI() 返回圆周率π的值，精确到小数点后6位：3.141593 RADIANS(number) 将角度转换为弧度。 RAND() 返回范围在[0,1)的随机实数，一般小数点后保留6位。 RANDBETWEEN(bottom,top) 返回自定义范围内的随机数，范围为[bottom,top)。 ROUND(number,decimal_places) 四舍五入函数，操作目标为number参数，decimals_places为保留的位数。 decimals_places参数，应填入整数，值大于0表示保留的小数位数有几个，等于0表示不保留小数，小于0表示将整数部分的后几位四舍五入，如： 123456round(123.14159,2); //保留两位小数，结果为123.14round(123.14159,0); //不保留小数，结果为123round(123.14159,-2); //将整数部分的后两位四舍五入，结果为100 注：在Excell里以上表述完全生效，但是在SU里第二个参数填写负数和0的作用一样，都是取整！ SIGN(number) 返回参数的符号，参数大于0返回1，等于0返回0，小于0返回-1。 SQRT(number) 对参数开二次根号。 （二）SketchUp函数 CHOOSE(index,value1,value2,......valueN) 第一个参数为索引值（从1开始，0会报错），后面的值都是筛选数据，从一组数据中返回第index个数据： 12alert(choose(1,9,8,7,6,5)); //输出为9 CURRENT(&quot;attributeName&quot;) EDGES() FACEAREA(&quot;materialName&quot;) FACES() LARGEST(value1,value2,......valueN). LAT() LNG() NEAREST(originalValue,value1,value2,......valueN) OPTIONINDEX(&quot;attributeName&quot;) OPTIONLABLE(&quot;attributeName&quot;) SMALLEST(value1,value2,......valueN) SUNANGLE() SUNELEVATION() （三）文字函数 CHAR(number) CODE(text) CONCATENATE(text1,text2,......textN) DOLLAR(value,decimals) EXACT(text1,text2) FIND(findText,text,position) LEFT(text,number) LEN(text) LOWER(text) MID(text,start,number) PROPER(text) REPLACE(text,position,length,new) REPT(text,number) RIGHT(text,number) SUBSTITUTE(text,searchText,newText,occurrence) TRIM(text) UPPER(text) VALUE(text) （四）三角函数 ACOS(number) ACOSH(number) ASIN(number) ASINH(number) ATAN(number) ATANH(number) COS(number) COSH(number) SIN(number) SINH(number) TAN(number) TANH(number) （五）逻辑函数 AND(logicalValue1,logicalValue2,...logicalValueN) FALSE() IF(test,thenValue,elseValue) NOT(logicalValue) OR(logicalValue1,logicalValue2,...logicalValueN) TRUE() （六）onClick函数 ALERT(&quot;message&quot;) ANIMATE(&quot;attribute&quot;,state1,state2...stateN) ANIMATEFAST(&quot;attribute&quot;,state1,state2...stateN) ANIMATECUSTOM(&quot;att&quot;,时间,缓慢进入,缓慢移出,状态1,状态2,...状态N) ANIMATESLOW(&quot;attribute&quot;,state1,state2...stateN) GOTOSCENE(&quot;sceneName&quot;,time,easein,easeout) REDRAW() SET(&quot;attribute&quot;,state1,state2...stateN)","categories":[{"name":"建筑学","slug":"建筑学","permalink":"http://kouqiang.space/categories/%E5%BB%BA%E7%AD%91%E5%AD%A6/"}],"tags":[{"name":"建筑学","slug":"建筑学","permalink":"http://kouqiang.space/tags/%E5%BB%BA%E7%AD%91%E5%AD%A6/"},{"name":"SU","slug":"SU","permalink":"http://kouqiang.space/tags/SU/"}],"author":"寇强"},{"title":"JavaScript——基础篇02","slug":"JavaScript——基础篇02","date":"2023-01-14T04:00:00.000Z","updated":"2023-01-30T04:59:29.757Z","comments":true,"path":"2023/01/14/JavaScript——基础篇02/","link":"","permalink":"http://kouqiang.space/2023/01/14/JavaScript%E2%80%94%E2%80%94%E5%9F%BA%E7%A1%80%E7%AF%8702/","excerpt":"","text":"JavaScript——基础篇02各种功能实现的思路及代码 一、昼夜主题切换功能在没有后台服务器，前端只有静态页面时，用js就可以实现昼夜主题切换。不过缺点是默认主题不能随时间变化，且每刷新一次页面都会恢复为默认样式。 如果有后端，则应该根据客户端请求网页的不同时间来动态创建不同主题的前端页面！ 思路一：更改css文件提前写好两个配色主题（css文件），利用点击按钮绑定js函数去更改头部&lt;link&gt;标签的&lt;href&gt;属性——更改引入的css文件的路径——来实现该想法。 代码实现： 1.body中添加点击按钮，获取元素并绑定点击事件，并新建一个标记昼夜白天切换的变量tips！ 12345678910111213141516171819...&lt;script&gt;window.onload = function()&#123; var btn01 = document.getElementById(&quot;btn-01&quot;); //添加变量以标记昼夜白天，此处建议与css文件名一致，以方便将此值直接应用到文件名处！ var tips = &quot;day&quot;; btn01.onclick = function()&#123; &#125;&#125;&lt;/script&gt;...&lt;body&gt; ... &lt;img src=&quot;./img/moon01.png&quot; id=&quot;btn-01&quot; /&gt; ...&lt;/body&gt; 2.点击事件的实现（重点！） （1）获取头部&lt;link&gt;元素 注：经测试，&lt;link&gt;标签无法通过id获取，可使用TagName获取！ 12var linkList = document.getElementsByTagName(&quot;link&quot;);// 此时获取到的是所有link标签的集合，如果有多个link标签应再确认是哪一个，只有一个的话那就是“linkList[0]” （2）修改&lt;link&gt;标签的href属性 1234567if(tips == &quot;day&quot;)&#123; tips = &quot;night&quot;; linkList[0].href = &quot;./css/&quot; + tips + &quot;.css&quot;;&#125;else&#123; tips = &quot;day&quot;; linkList[0].href = &quot;./css/&quot; + tips + &quot;.css&quot;;&#125; 3.总结 1234567...&lt;script src=&quot;./js/dayNightSwitch.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt; &lt;/script&gt;...&lt;div id=&quot;dayNightDiv&quot;&gt; &lt;img src=&quot;https://www.z4a.net/images/2023/01/14/day_and_night.png&quot; id=&quot;dayNightBtn&quot; /&gt;&lt;/div&gt;... 1234567891011121314window.onload = function()&#123; var btn01 = document.getElementById(&quot;dayNightBtn&quot;); var tips = &quot;day&quot;; var linkList = document.getElementsByTagName(&quot;link&quot;); btn01.onclick = function()&#123; if(tips == &quot;day&quot;)&#123; tips = &quot;night&quot;; linkList[0].href = &quot;./css/新拟态&quot; + tips + &quot;.css&quot;; &#125;else&#123; tips = &quot;day&quot;; linkList[0].href = &quot;./css/新拟态&quot; + tips + &quot;.css&quot;; &#125; &#125;&#125; 该方法修改较为方便，操作简单，最重要的是代码耦合度低！ 思路二：即时更改页面配色默认使用配色1，将配色2写在js里，点击按钮运行该脚本，再点击恢复原来配色 总结：这种方法代码少，但是可读性不强，较难修改和维护，代码耦合度高，在页面简单内容较少时更易操作，但是页面内容一旦多起来就显得捉襟见肘，因此不是很推荐！ 二、轮播图的实现","categories":[{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"学习总结","slug":"学习总结","permalink":"http://kouqiang.space/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/tags/%E5%89%8D%E7%AB%AF/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://kouqiang.space/tags/JavaScript/"}],"author":"寇强"},{"title":"博客搭建流程（0基础开始向）","slug":"博客搭建流程","date":"2022-12-27T16:00:00.000Z","updated":"2023-01-09T16:11:50.406Z","comments":true,"path":"2022/12/28/博客搭建流程/","link":"","permalink":"http://kouqiang.space/2022/12/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/","excerpt":"","text":"博客搭建流程（0基础开始向）（使用GitHub+Hexo） 一、注册GitHub1.访问GitHub访问GitHub方法： 1.访问http://www.github.com.ipaddress.com/，查看GitHub的IP地址 2.找到C:\\windows\\System32\\drivers\\etc\\host文件，在最后添加新的一行，内容为GitHub的IP地址和网址，中间用空格分开，如下，保存好 12140.82.112.4 github.com140.82.112.4 www.github.com 3.打开终端，输入如下指令刷新配置 1ipconfig /flushdns 二、安装Git（我安的2.35）原参考知乎安装教程：个人博客第2篇——Git 2.25.0详细安装步骤 - 知乎 (zhihu.com) git官网：Git (git-scm.com) 三、绑定GitHub并提交文件GitHub上可以直接提交文件，远程仓库与本地仓库可以通过SSH协议或者HTTPS协议这两种方式连接，我们这里用SSH来完成GitHub的绑定并提交文件 SSH（安全外壳协议，Secure Shell 的缩写）是建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。简单来说，SSH就是保障你的账户安全，将你的数据加密压缩，不仅防止其他人截获你的数据，还能加快传输速度。 1.绑定GitHub打开GitBashHere，用【ssh-keygen -trsa】命令在本机生成公钥(id_rsa.pub)和密钥(id_rsa)，将公钥的文本内容复制到GitHub网站里我的SSHKey里面。（默认公钥密钥生成路径为：C:\\Users\\用户名\\.ssh\\id_rsa.pub） 注：git里面的复制粘贴是Ctrl+ Insert 和 Shift+ Insert 如下图所示，打开你的GitHub👉右上角小头像展开👉Settings👉SSH and GPG keys👉new key👉输入Title(可不填)和Key👉Add SSH key 12345678910111213141516171819202122232425262728293031323334353623163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace$ sshusage: ssh [-46AaCfGgKkMNnqsTtVvXxYy] [-B bind_interface] [-b bind_address] [-c cipher_spec] [-D [bind_address:]port] [-E log_file] [-e escape_char] [-F configfile] [-I pkcs11] [-i identity_file] [-J [user@]host[:port]] [-L address] [-l login_name] [-m mac_spec] [-O ctl_cmd] [-o option] [-p port] [-Q query_option] [-R address] [-S ctl_path] [-W host:port] [-w local_tun[:remote_tun]] destination [command [argument ...]]23163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace$ ssh-keygen -trsaGenerating public/private rsa key pair.Enter file in which to save the key (/c/Users/23163/.ssh/id_rsa):Created directory &#x27;/c/Users/23163/.ssh&#x27;.Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /c/Users/23163/.ssh/id_rsa //这是生成密钥的位置Your public key has been saved in /c/Users/23163/.ssh/id_rsa.pub //这是生成公钥的位置The key fingerprint is:SHA256:OQnGcnRhMElRNcl1cYYVEpjiwyTZvQpLc8+wr6DvKB0 23163@▒ҵĶ▒▒ӽ▒▒▒▒▒The key&#x27;s randomart image is:+---[RSA 3072]----+| .*=B++o+o+==|| o.* +o= .oo || . = = . . || + = O . || . S B || E . + o || . .. . || . .o . . || .ooo .. |+----[SHA256]-----+23163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace$ 验证是否成功： 1ssh -T git@github.com 打入yes回车： 12345678910111223163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace$ ssh -T git@github.comThe authenticity of host &#x27;github.com (20.205.243.166)&#x27; can&#x27;t be established.ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.This key is not known by any other namesAre you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added &#x27;github.com&#x27; (ED25519) to the list of known hosts.Hi KQ2316336903! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.23163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace$ 2.提交文件（1）本地没有git仓库①直接将远程仓库克隆到本地 在准备储存仓库的目录下GitBashHere，输入指令【git clone 刚刚复制的仓库地址】 1223163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace/myRepository01/myRepository01 (main)$ git clone https://github.com/KQ2316336903/myRepository01.git 打开仓库存储目录检查是否与远程仓库一致 ②将新建的文件添加并commit到本地仓库12git add &lt;fileName&gt; //将某文件添加到临时缓冲区/暂存区，若有多个文件，则文件名中间用空格分隔开即可！git commit -m &quot;这里自己填写对于本次提交修改的备注内容&quot; //将文件提交到本地仓库 如果是第一次提交会让你输入用户名和邮箱，按如下格式添加即可： 12git config --global user.name &quot;自己的GitHub用户名&quot;git config --global user.email &quot;账号绑定的邮箱地址&quot; //(注意空格！！) 其他指令 12git log //查看仓库提交日志git status //查看仓库状态 ③将本地仓库的内容push到远程仓库最后将本地仓库提交到远程仓库： 1git push origin master //这里的master在后来的git版本中是main，所以需注意跟自己gitbash窗口中保持一致即可 第一次会弹出这个账户认证窗口 点击登录，会跳转到默认浏览器里，输入账户密码登录后，跟着步骤确认就行了，GitBash窗口会在操作完成后自动push的。 （2）本地有git仓库，并且我们已进行了多次commit操作①建立本地仓库建立仓库文件夹，在这个文件夹内GitBashHere，使用git init命令创建&#x2F;初始化这个仓库 12345623163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace/myRepository01/demo01$ git initInitialized empty Git repository in H:/GitWorkSpace/myRepository01/demo01/.git/23163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace/myRepository01/demo01 (master)$ ②关联远程仓库1234567$ git remote add origin https://github.com/KQ2316336903/myRepository01.git23163@▒ҵĶ▒▒ӽ▒▒▒▒▒ MINGW64 /h/GitWorkSpace/myRepository01/demo01 (master)//对于新建的仓库，执行以下命令后的报错忽略不计$ git pull origin masterfatal: couldn&#x27;t find remote ref master （3）总结：先绑定本地仓库，将远程仓库文件同步到本地（git clone和git pull），然后后续有了文件变化时将本地变化git push到远程仓库。 一次性git add多个文件（夹）： 12345git add . //提交所有被修改和新建的文件，但不包括被删除的文件git add -a //all，提交所有已被修改和删除的文件，但不包括新建文件git add -u //update，更新/提交所有已改变的文件 3.其他配置①删除本地仓库删除Git本地仓库的根本原理是删除“Git本地仓库”⾥⾯的根⽬录下⾯的隐藏⽂件夹“.git” ②解决中文名文件无法显示和提交的问题 git bash终端输入git config --global core.quotepath false 窗口界面空白处右键选择“Options”，Text&gt;Loacle设置为zh_CN和UTF-8即可 四、购买域名不买也行，没影响 五、安装Node.js和Hexo1.Node.js①安装官网网址： Node.js (nodejs.org) 除了安装位置没什么改动的，一直next安装好就行了 安装好后可以打开终端检查下 12345C:\\Users\\23163&gt;node -vv16.14.2C:\\Users\\23163&gt;npm -v8.5.0 ②配置设置npm在安装全局模块时的路径和环境变量，因为默认会安C盘，而且后续Hexo可能无法正常使用 先在软件安装目录下新建两个文件夹：node_cache和node_global； 打开终端，根据自己安装的目录输入以下指令 123C:\\Users\\23163&gt;npm config set prefix &quot;G:\\Nodejs\\node_global&quot;C:\\Users\\23163&gt;npm config set cache &quot;G:\\Nodejs\\node_cache&quot; 设置环境变量： 新增系统变量： 编辑用户变量PATH，新建如下： 验证： 以管理员身份运行终端，执行npm install webpack -g： 123456789101112131415C:\\WINDOWS\\system32&gt;npm install webpack -gadded 71 packages, and audited 72 packages in 40s8 packages are looking for funding run `npm fund` for detailsfound 0 vulnerabilitiesnpm noticenpm notice New patch version of npm available! 8.5.0 -&gt; 8.5.5npm notice Changelog: https://github.com/npm/cli/releases/tag/v8.5.5npm notice Run npm install -g npm@8.5.5 to update!npm noticeC:\\WINDOWS\\system32&gt; 2.Hexo①先在GitHub上建立一个新仓库名称格式为“你的用户名.GitHub.io” 创建好后点击Setting，看到如下内容表示这一步完成 ②安装Hexo 首先在G盘新建一个文件夹Blog，进入并GitBashHere，输入npm命令安装Hexo： 1npm install -g hexo-cli *此时hexo安装目录下是没有东西的！ 安装完成后，输入hexo init初始化博客 hexo g静态部署 这时网站已经部署完成，输入hexo s可以查看 浏览器地址栏可以输入上图中HEXO提供的网址进行访问： Ctrl + c停止运行服务器 3.将Hexo部署到GitHub①打开Blog文件夹中的【_config.yml】文件，在最后加上如下内容： 1234deploy: type: git repository: https://github.com/KQ2316336903/KQ23136336903.github.io.git branch: main ②在Blog文件夹内GitBashHere，输入如下命令安装Git部署插件： 1npm install hexo-deployer-git --save ③然后分别输入以下三条命令： 123hexo clean //清除缓存文件db.json和已生成的静态文件publichexo g //hexo generate生成网站静态文件到默认设置的public文件夹hexo d //hexo deploy自动生成网站静态文件，并部署到设定的仓库 弄好之后就可以在浏览器访问你的网页了! 4.卸载Hexo首先在安装目录下执行指令： 1npm uninstall hexo-cli -g 再删除Blog文件夹即可 六、Hexo食用指南1.hexo项目结构12345678.├── _config.yml //整个博客网站的配置文件，里面包含了网站的配置、网址配置、目录配置、主题配置等等内容。├── package.json├── scaffolds├── source //存放用户资源/源码的地方| ├── _drafts| └── _posts└── themes ①_config.yml文件：配置文件1234567891011121314...# Sitetitle: Hexo //网站标题subtitle: &#x27;&#x27; //副标题description: &#x27;&#x27; //描述keywords: //关键字author: John Doe //作者language: en //语言，这里记得要改成“zh-CN”，这样安装不同主题时都可以显示中文timezone: &#x27;&#x27; ...url: http://example.com //url是博客上线后的网址...theme: landscape //主题配置... ②scaffolds文件夹：模板文件夹模板文件夹，里面存放了3个模板文件，依次是草稿模板，页面模板和文章模板。 当我们使用hexo命令生成草稿、页面或者文章的时候，就是复制这些模板。 123├── draft.md //草稿├── FASTPANEL //页面├── post.md //文章 post文章模板： 123456---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:---//新建的文件都会按照此模板的内容新建，带有此文件头。修改此模板则新建的文件头也会随之改变。 ③source文件夹：资源&#x2F;源码文件夹项目根目录下除_post文件夹之外，以_(下划线)开头命名的文件和隐藏的文件在后续解析和部署时都会被忽略；markdown和html文件会被解析并放到public文件夹内，而其它文件会被拷贝过去。 ④themes文件夹：hexo主题存放文件夹存放下载的主题文件 2.写作12345678910hexo s //hexo server，运行hexo服务hexo new 无后缀的文件名 //新建markdown文件，如果此处给文件名加了后缀如ABC.md，那么新建文件的会变成【ABC_md.md】，其他格式也是如此！所以hexo只能新建.md文件？ //在命令行输入的文件名，会被写入到文件头内，最后在网页中的文件名上展示出来，因此网页上展示的文章文件格式有可能和源文件格式不一致！hexo new page 文件夹名 //会在source/下创建一个新文件夹，文件夹内默认会有index.md文件，这样你访问该文件夹名的链接时会显示其内的index.md文件hexo new draft 文件名 //这样创建的文件会被放进source/_drafts文件夹内，作为你的草稿而不会在网页显示hexo server --draft //在网页内预览草稿hexo publish draft myDraft01 //将草稿文件mydraft01.md发布到博客上 文章顺序hexo文章默认是按照创建时间为顺序倒序排列的，因此要改变文章展示顺序，应修改文件头内的date字段的时间； Front-matter文件头1234---title: Hello Worlddate: 2013/7/13 20:46:25--- 预定义的参数： 123456789参数 描述 默认值layout 布局 config.default_layouttitle 文章显示的标题 创建文件时起的名字date 创建日期update 更新日期comments 开启文章评论功能 truetags 标签categories 分类permalink 覆盖文章网址 3.主题安装和配置网友主题推荐：Icarus、Butterfly、next、volantis、fluid等等 icarus：GitHub - ppoffice&#x2F;hexo-theme-icarus: A simple, delicate, and modern theme for the static site generator Hexo. butterfly：Hexo-Butterfly主题(🦋 A Hexo Theme: Butterfly-Official website) (butterfly1.cn)](https://www.butterfly1.cn/index.html) next：NexT 使用文档 (iissnan.com)](http://theme-next.iissnan.com/) volantis：https://volantis.js.org/ fluid：https://hexo.fluid-dev.com/docs/ ①主题下载：GitHub上找到主题所在的仓库，要么用git命令克隆到本地，要么下载压缩包后解压到本地： 方法一，git克隆仓库12git clone 仓库所在地址 themes/主题名 //这里的主题名自定义，在themes下会生成一个以此命名的文件夹存放主题内容git clone https://github.com/theme-next/hexo-theme-next.git themes/next 这种方式应用的主题在更新时只需【git pull】即可！ 方法二，下载压缩包解压解压至路径【~&#x2F;themes&#x2F;主题名】下，该路径下要有主题的配置文件【_config.yml】 ②主题应用：将项目根目录下的配置文件【_config.yml】文件中的【theme: xxxxxx】字段改为要应用的主题名，重启服务即可 ③主题配置主题存放目录下会有主题自己的配置文件【_config.yml】，更改里面的配置信息即可更改主题样式 一般具体的配置方法都会在主题官网的帮助文档里说明。 ​","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://kouqiang.space/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://kouqiang.space/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"author":"寇强"},{"title":"CSS进阶","slug":"CSS进阶","date":"2022-12-22T13:10:00.000Z","updated":"2023-01-09T16:16:39.488Z","comments":true,"path":"2022/12/22/CSS进阶/","link":"","permalink":"http://kouqiang.space/2022/12/22/CSS%E8%BF%9B%E9%98%B6/","excerpt":"","text":"CSS进阶n.css设置背景渐变色1.线性渐变 123456789101112131415161718* &#123; background: linear-gradient(渐变方向,开始颜色 偏移量...,结束颜色 偏移量);&#125;/* 渐变方向：1.关键字指示to top, to bottom, to left top,等，left和top等关键字的前后顺序无所谓！2.deg角度指示：按照钟表指针方向渐变，0deg为十二点（从下往上），90deg为三点（从左往右），225deg为左下往右上。0~360deg，也可以是负数。颜色用rgb()rgba()或&quot;#xxxxxx&quot;都行，可填写多个达到多色渐变的效果；偏移值设置颜色偏移值，不太明白，感觉很少用到；*/ 2.径向渐变&#x2F;放射渐变 12345678910111213141516* &#123; background: radial-gradient(center,shape,size,start-color...,last-color);&#125;/*center：渐变起点的位置，可以为两个百分比数值，默认是图形正中心；shape：渐变形状，ellipse椭圆，circl圆，默认椭圆。如果容器为正方形则二者相同。上面这俩属性我设置了但是没用！可恶！也不知道问题出在哪儿！size：渐变大小，规定渐变到哪里停止，有四个值： closest-side：最近边 farthest-side：最远边 closest-corner：最近角 farthest-corner：最远角*/ 属性过渡transition属性可用来给元素添加某个属性的过渡效果 1transition: all .2s ease-in-out; transition有四个子属性： transition-property 选择对哪个属性应用过渡，可选值有all、none或者自定义属性名，多个属性之间用逗号隔开： 1transition-property: border,background; transition-duration 过渡动画持续时间，单位为’s’(秒)且不可省略，默认值为0，如： 1transition-duration: .8s; transition-timing-function 动画过渡的线性规律（又称时间曲线），自带6个值： ease：默认值，逐渐变慢； linear：匀速，线性； ease-in：加速； ease-out：减速； ease-in-out：先加速后减速。 transition-delay 设置动画延迟，值也是秒，写法与transition-duration相同。 一般我们使用复合写法，如： 1transition: all .2s ease-in-out; 提示：在实际开发中，建议给元素原属性也加上transition属性，这样就能避免元素恢复原样貌时没有过渡动画的bug。 变形transform属性可使元素变形，包括位移、旋转、缩放、倾斜： 阴影使用box-shadow和text-shadow可以给元素和文本添加阴影： 123box-shadow: h-shadow v-shadow blur spread color inset(outset);text-shadow: h-shadow v-shadow blur color; h-shadow：必需，阴影水平方向上位置，正数向右，负数向左，单位px； v-shadow：必需，阴影垂直方向上位置，正数向下，负数向上，单位px； blur：可选，阴影模糊距离，单位px； spread：可选，阴影的尺寸； color：可选，阴影颜色，值可以是rgba(3,204,204,0.2)或rgb(1,1,1)类型或直接用#bbdbc6hex型数值； inset&#x2F;outset：可选，设置投影为外投影或内投影，默认外投影。 添加多个阴影，用逗号分隔开即可： 1box-shadow: 1px 1px 5px 0 blue inset, 2px 2px 10px rgba(240,240,240,0.2) outset; 滤镜filter属性可以给元素添加图像滤镜：","categories":[{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://kouqiang.space/tags/CSS/"},{"name":"学习总结","slug":"学习总结","permalink":"http://kouqiang.space/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/tags/%E5%89%8D%E7%AB%AF/"}],"author":"寇强"},{"title":"CSS学习总结","slug":"CSS学习总结","date":"2022-12-22T06:56:00.000Z","updated":"2023-01-12T03:23:57.296Z","comments":true,"path":"2022/12/22/CSS学习总结/","link":"","permalink":"http://kouqiang.space/2022/12/22/CSS%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/","excerpt":"","text":"CSS学习总结一、CSS引入方式1.外部引入在HTML文件头部信息内（&lt;head&gt;&lt;/head&gt;标签内）通过&lt;link&gt;标签引入外部CSS文件： 1&lt;link rel=&quot;stylesheet&quot; href=&quot;文件的路径&quot; type=&quot;text/css&quot; /&gt; 此处的rel属性必写且值必须为stylesheet！ type属性可省略，若不省略则属性值必须为text/css！ 2.内部写入在HTML文件头部信息内的&lt;style&gt;&lt;/style&gt;标签内写入CSS代码： 1234567...&lt;style&gt; div &#123; ... &#125;&lt;/style&gt;... 3.行内嵌入直接在元素属性区域写入style属性即定义css样式： 123&lt;P style=&quot;color: pink; font-size: 20px;&quot;&gt; 日暮伯劳飞，风吹乌桕树。&lt;/P&gt; 二、语法规范1234selector &#123; 属性01: 属性值01 属性值02; 属性02: rgba(255,255,255,1) solid red;&#125; 三、CSS基础选择器 基础选择器是由单个选择器构成的； 基础选择器包括标签&#x2F;元素选择器、类选择器、id选择器和通配符选择器。 1.标签&#x2F;元素选择器标签选择器 （元素选择器） 是 指用 HTML 标签名称 作为选择器，按标签名称分类，为页面中某一类标签指定 统一的 CSS 样式。 标签选择器直接写不带尖括号的标签名即可： 1234567891011标签名 &#123; 属性1: 属性值1; 属性2: 属性值2; 属性3: 属性值3; ...&#125;p &#123; color: pink; font-size: 10px;&#125; 2.类选择器和id选择器id属性只允许运用于一个元素，选择器用#id名的语法规则进行选择； class属性运用于多个元素，一个标签可以同时定义多个class属性，多个class名之间用空格分开！选择器用.类名的语法规则进行书写！ 1234567891011121314151617181920212223242526272829303132333435363738&lt;html&gt; &lt;head&gt; &lt;style&gt; /*id选择器*/ #div01 &#123; ... &#125; #div02 &#123; ... &#125; /*class选择器*/ .div &#123; ... &#125; .big &#123; ... &#125; .big, .blue &#123; /*多个选择器之间用半角逗号加空格或换行分隔开*/ ... &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;div01&quot; class=&quot;div big blue&quot;&gt; div01 &lt;/div&gt; &lt;div id=&quot;div02&quot; class=&quot;div big&quot;&gt; div02 &lt;/div&gt; &lt;div id=&quot;div03&quot; class=&quot;div blue&quot;&gt; div03 &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 3.通配符选择器*在 CSS 中，通配符选择器使用“ * ”定义，它表示选取页面中所有元素（标签）。 举例： 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;基础选择器之通配符选择器&lt;/title&gt; &lt;style&gt; * &#123; color: red; &#125; /* 这里把 html body div span li 等等的标签都改为了红色 */ &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;我的&lt;/div&gt; &lt;span&gt;我的&lt;/span&gt; &lt;ul&gt; &lt;li&gt;还是我的&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; 4.属性选择器根据属性值选择某类标签，语法： 123456789101112标签名[属性=&quot;属性值&quot;] &#123; &#125;例如：div[width=&quot;1000px&quot;] &#123; ...&#125;或：input[type=&quot;text&quot;] &#123; ...&#125; 四、CSS高级&#x2F;复合选择器在 CSS 中，可以根据选择器的类型把选择器分为 基础选择器 和 复合选择器 ，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。复合选择器可以更准确、更高效的选择目标元素（标签）复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的。常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器等等。 1.后代选择器选择父元素下的所有某类子元素，包括子、孙、重孙等： 12345678910111213141516171819202122232425262728父元素 子元素 &#123; 样式声明&#125;&lt;head&gt; &lt;style&gt; /*选择了最外面&lt;div&gt;里的所有&lt;p&gt;元素*/ &lt;div&gt; &lt;p&gt; &#123; ... &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt; &lt;p&gt; &lt;h1&gt; &lt;/h1&gt; &lt;/p&gt; &lt;div&gt; &lt;h1&gt; &lt;p&gt; &lt;/p&gt; &lt;/h1&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 2.子&#x2F;层级选择器1元素一&gt;元素二 &#123;...&#125; //中间用大于号连接，无空格！ 只选择元素一下一级的所有元素二（只选择儿子这一层，不涉及孙子等），更深一层的元素不会选择到！ 12345678910111213141516171819202122232425262728&lt;head&gt; &lt;style&gt; /*选择所有&lt;div&gt;下一级的所有&lt;p&gt;元素，因此下面代码运行结果是感叹号和问好都是红色！*/ div&gt;p &#123; ... &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt; &lt;p&gt; &lt;h1&gt; &lt;/h1&gt; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! &lt;/p&gt; &lt;div&gt; &lt;h1&gt; &lt;p&gt; &lt;/p&gt; &lt;/h1&gt; &lt;p&gt; ????????????????????????? &lt;/p&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 3.并集选择器选择满足任一选择器的元素 多个选择器之间用半角逗号分开（出于习惯常常在逗号后面带一个空格）： 123div, p, #id01, .allDiv &#123; ...&#125; 4.交集选择器选择同时满足多个选择器的标签。 交集选择器中如果有标签选择器，那么标签选择器必须位于最前面！ 选择器之间是紧挨着的，没有任何东西分隔！ 123divh1h2 &#123; ...&#125; 五、伪类选择器伪类选择器用于向某些选择器添加特殊效果 1.常见链接伪类选择器主要有以下几类： 1234a:link //未访问时的属性a:visited //访问后的属性a:hover //鼠标悬浮在上面时的属性a:active //鼠标点中一瞬间的属性 注：如果是&lt;a&gt;标签使用该选择器，顺序不可变！ 2.常见结构伪类选择器1234:first-child //第一个节点:last-child //最后一个节点:nth-child(n) //顺数第n个节点（2n表示顺数的所有偶数位节点）:nth-last-child(n) //倒数第n个节点（2n表示倒序所有偶数位节点） 更多请查阅参考：伪类选择器简单总结 3.目标伪类选择器1:target 六、CSS样式1.常用文字样式1234567891011div &#123; color: #ffffff; //字体颜色，HEX值； font-size: 50px; //字体大小，单位一般为px（像素）； font-weight: 500; //字体粗细，可选100到1000之间的十个整百数，100最细1000最粗；或选择normal/bold； font-style: italic; //字体斜体 font-family: &#x27;微软雅黑&#x27;; //字体类型，使用自己电脑安装了的字体，用半角引号包起来才能被识别！&#125; 2.文本格式设置1234567891011text-align: //文字水平对齐方式，可选left、center、right；还可对&lt;img&gt;标签生效！text-decoration: //设置文字上下划线和删除线，可选：顶overline、删除线line-through、底underline、无任何划线none，此处none可应用于去除链接文字的下划线；text-transform: //转换英文文本的大小写，对中文无影响，可选none(无转换)、uppercase(变大写)、lowercase(变小写)、capitalize(只将每个单词的首字母变大写)；text-indent: //控制文本首行的缩进值，新手用像素值如：text-indent: 20px;；font-varient: //将英文设置为小型大写字母，对汉字无影响，属性值为normal时不转换，为small-caps应用生效；line-height: //设置行高而不是行间距！新手用像素单位，如：line-height: 30px;； 3.元素边框样式只需记忆如下常用属性即可： 12345border-width: //边框宽度，单位px；border-style: //边框样式，有实线solid和虚线dashed；border-color: //边框颜色； 一键设置： 1border: 1px solid blue; //此处属性前后顺序随意，不影响效果！ 4.元素背景图片123456789background: skyblue; //设置背景颜色，当背景图片和背景颜色同时被设置时图片会覆盖在背景颜色上面！background-image: url(); //定义图片路径，绝对路径和相对路径都行，路径写在url()的括号内；background-repead: no-repeat; //设置图片是否平铺/重复，可选no-repeat不平铺、repeat-x方向平铺、repeat-y方向平铺、默认值repeat两个方向都平铺；background-position: center; //设置图片的放置位置，属性值可为这五个关键词：left right top bottom center，可单个或混合任意两个搭配使用如：center居中对齐，top居中顶对齐，bottom right右下对齐，center bottom居中底对齐；属性值也可为像素值，第一个值为left效果的左边距，第二个值为top效果的上边距如：center 50px效果为垂直居中对齐距离上边框50px；background-attachment: fixed; //设置背景图片是否随屏幕内容滚动，属性值fixed为固定，scroll为滚动； 背景样式的复合写法： 12345/*此处属性前后顺序随意！*/background: 背景颜色 背景图片地址 背景图片平铺 背景图片滚动 背景图片方位;background: rgba(255,255,255,0.5) url(./img/01.png) no-repeat fixed center;background: rgb(240,240,240) left center fixed url(./img/网站.png) no-repeat; 5.图片样式（1）图片尺寸和图片边框12345678910img &#123; width: 100px; height: 100px; border-width: 1px; border-style: solid; border-color: red; border: 1px solid red;&#125;&lt;img src=&quot;./img/01.jpg&quot; /&gt; （2）图片设置水平和垂直对齐水平对齐可用text-align: left/center/right设置，注意是设置图片的父标签，就会应用到&lt;img&gt;标签上，如果设置在图片标签上则不生效！ 1234567#id05 &#123; text-align: center; &#125; &lt;div id=&quot;id05&quot;&gt; &lt;img src=&quot;img/画板.png&quot; /&gt;&lt;/div&gt; 垂直对齐细嗦： 垂直对齐：vertical-align属性 vertical-align属性取值 说明 top 顶部对齐 middle 中部对齐 baseline 基线对齐 bottom 底部对齐 解决图片底部默认空白缝隙问题：bug：图片底侧会有一个空白缝隙，原因是行内块元素（图片）会和文字的基线对齐。主要解决方法有两种：给图片添加 vertical-align:middle | top| bottom 等。 （提倡使用的）把图片转换为块级元素 display: block; 6.列表项前符号样式选择列表中的&lt;li&gt;标签，用list-style-type属性可以自定义项前符号样式： 一般对有序列表应用这些样式： list-style-type属性值 说明 decimal 阿拉伯数字 lower-roman 小写罗马数字 upper-roman 大写罗马数字 lower-alpha 小写英文字母 upper-alpha 大写英文字母 lower-greek 小写希腊字母 一般对无序列表应用这些样式： list-style-type属性值 说明 disc 实心圆 circle 空心圆 square 实心方块 还可以自定义图片为样式：123li &#123; list-style-image: url(./imgs/01.png);&#125; 此处的图片尺寸为100%，原图大小，因此选择图片时要注意尺寸！ 注：以上所有样式都可以应用到无序列表项和有序列表项，但自定义列表不会生效！ 7.表格样式（1）表格边框123table, th, td &#123; border: 1px solid black;&#125; 像这样加了边框之后table和td的边框会显得不美观，这时我们可以给table标签设置border-collapse： collapse属性来合并相邻边框： 1234table td &#123; border-collapse: collapse; border: 1px solid black;&#125; Bug：最顶部的边框变粗了！？ （2）宽度、高度、边框间距1234567table &#123; width: 100px;&#125;tr &#123; height: 100px;&#125; 在CSS中，我们使用border-spacing属性来定义表格边框间距。语法：border-spacing:像素值;说明：该属性指定单元格边界之间的距离，只需要在table元素设置就可以生效。当只指定了1个像素值时，这个值将作用于横向和纵向上的间距；当指定了2个length值时，第1个作用于横向间距，第2个作用于纵向间距。 123table &#123; border-spacing: 5px;&#125; （3）表格标题位置caption-side: bottom;该属性可定义表格标题位置，可选属性值有top和bottom，定义在table或者caption中都能生效： 1234567table &#123; caption-side: bottom;&#125;caption &#123; caption-side: bottom;&#125; 8.CSS盒子模型所有HTML元素可以看作盒子，盒子模型不是指定某一个元素，而是囊括所有的HTML的块级元素。 在CSS中，”box model”这一术语是用来设计和布局时使用。 CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。 盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。 下面的图片说明了盒子模型(Box Model)： （1）盒子边框border边框由三部分组成，分别是边框线宽border-width、线条样式border-style、线条颜色border-color： 名称 描述 border-width 边框线宽 border-style 边框线条样式，有以下四种：无边框none、实线solid、虚线dashed、点线dotted border-color 边框颜色 以上三个属性可单独设置，也可统一设置： 1234567border-width: 1px;border-color: red;border-style: solid;/*等价于：*/border: solid red 1px; //此处的属性顺序随意 注：边框宽度会影响盒子的实际尺寸！ （2）盒子内外边距padding和marginpadding和margin都有上下左右之分： 123456789padding-toppadding-rightpadding-bottompadding-leftmargin-topmargin-rightmargin-bottommargin-left padding和margin可以单独设置四个边，也可以一次性设置好四个边： 他（们）的值可以有一到四个，分别表示不同的位置： 1234567padding: 5px; //上下左右padding: 5px, 1px; //上下，左右padding: 5px, 1px, 2px; //上，左右，下padding: 5px, 1px, 2px, 4px; //顺时针：上，右，下，左 注：如果盒子已经有了具体尺寸，再设置padding的话，会撑大盒子尺寸！ 有关margin： 可以定义盒子的左右外边距为auto，这样会使得位于同一行的盒子水平居中： 12345margin: 10px auto;或：margin: auto;或：margin: 10px auto 10px; 垂直外边距合并： 上下两个盒子的外边距会合并为两个盒子margin较大的那个值而不是相加！ 上外边距塌陷： 对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。 解决方法：绝对定位的盒子不会有上述问题，下面再讲。 （3）清除内外边距网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。 12padding: 0; /* 清除内边距 */margin: 0; /* 清除外边距 */ 9.浮动布局（1）传统网页布局的三种方式网页布局的本质——用 CSS 来摆放盒子。 把盒子摆放到相应位置。CSS 提供了三种传统布局方式(简单说,就是盒子如何进行排列顺序)： 普通流（标准流） 浮动 定位 标准流（普通流&#x2F;文档流） 所谓的标准流: 就是标签按照默认方式排列。 块级元素会独占一行，从上向下顺序排列。常用元素：div、hr、p、h1~h6、ul、ol、dl、form、table 行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。常用元素：span、a、i、em 等。以上都是标准流布局，我们前面学习的就是标准流， 标准流是最基本的布局方式 。这三种布局方式都是用来摆放盒子的，盒子摆放到合适位置，布局自然就完成了。 （2）浮动布局HTML任何实体元素都可以被设置float浮动属性，设置后元素大小默认根据内容来定，当然也可以自己指定尺寸。 设置了浮动（float）的元素最重要特性： 脱离标准普通流的控制（浮） 移动到指定位置（动）, （俗称脱标） 浮动的盒子不再保留原先的位置 浮动元素会具有行内块元素特性。 任何元素都可以浮动。不管原先是什么模式的元素，添加浮动之后具有 行内块元素 相似的特性。 如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决 浮动的盒子中间是没有缝隙的，是紧挨着一起的 行内元素同理 1234567891011.containner, div &#123; float: left;&#125;三个属性：left向左、right向右、默认值none自身无浮动但允许左右有浮动元素清除浮动：div &#123; clear: both;&#125;三个属性：left清除左侧、right清除右侧、both清除左右两侧 10.定位布局让盒子自由的在某个容器内移动位置或者固定屏幕中某个位置，并且可以覆盖住其他盒子。 （1）定位组成定位 &#x3D; 定位模式 + 边偏移 ①定位模式由CSS的position属性定义定位模式： 属性值 描述 static 静态定位 relative 相对定位 absolute 绝对定位 fixed 固定定位 ②边偏移边偏移就是ing位的盒子移动到最终的位置，有如下属性： 属性 示例 描述 top top: 80px; 顶部偏移量，定义元素相对于父元素上边线的距离×，向下移动的距离√ bottom bottom: 90px; 底部偏移量，定义元素相对于父元素下边线的距离×，向上移动的距离√ left left: 100px; 左侧偏移量，定义元素相对于父元素左边线的距离×，向右移动的距离√ right right: 10px; 右侧偏移量，定义元素相对于父元素右边线的距离×，向左移动的距离√ （2）静态定位（没用）静态定位是元素的默认定位方式，即无定位的意思，语法： 123选择器 &#123; position: static;&#125; （3）相对定位relative作用：相对于原来默认布局中的位置来偏移！ 语法： 1234选择器 &#123; position: relative; top/bottom/left/right: 10px;&#125; 相对定位的特点： 移动的时候参照的是自己原来的位置 原来在标准流的位置继续占有，后面的盒子仍然以标准流的方式对待它 （4）绝对定位abdolute绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的。 如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位（Document 文档）。 语法： 1234选择器 &#123; position: absolute; top/bottom/left/right: 10px;&#125; 子绝父相： 子级是绝对定位的话，父级要用相对定位。 ① 子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子。 ② 父盒子需要加定位限制子盒子在父盒子内显示。 ③ 父盒子布局时，需要占有位置，因此父亲只能是相对定位。 这就是子绝父相的由来，所以相对定位经常用来作为绝对定位的父级。 总结： 因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位 当然，子绝父相不是永远不变的，如果父元素不需要占有位置，子绝父绝也会遇到。 （5）固定定位fixed固定定位是元素固定于浏览器可视区的位置。主要使用场景： 可以在浏览器页面滚动时元素的位置不会改变。 语法： 1234选择器 &#123; position: fixed; top/bottom/left/right: 10px;&#125; 固定定位的特点： 以浏览器的可视窗口为参照点移动元素，跟父元素无关，也不随滚动条滚动！ 固定定位不再占有原来的空间和位置！（脱标了） （6）粘贴定位sticky可以被认为是相对定位和固定定位的混合 语法： 1234选择器 &#123; position: sticky; top/bottom/left/right: 10px;&#125; 粘性定位的特点： 以浏览器的可视窗口为参照点移动元素（固定定位特点） 粘性定位占有原先的位置（相对定位特点） 必须添加 top 、left、right、bottom 其中一个才有效 跟页面滚动搭配使用。 兼容性较差，IE 不支持。 （7）总结 一定记住 相对定位、固定定位、绝对定位 两个大的特点： 1. 是否占有位置（脱标否） 2. 以谁为基准点移动位置。 学习定位重点学会子绝父相。 11.弹性布局display: flex12.过渡动画","categories":[{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://kouqiang.space/tags/CSS/"},{"name":"学习总结","slug":"学习总结","permalink":"http://kouqiang.space/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/tags/%E5%89%8D%E7%AB%AF/"}],"author":"寇强"},{"title":"JavaScript——基础篇01","slug":"JavaScript——基础篇01","date":"2022-10-17T14:56:00.000Z","updated":"2023-01-14T11:25:00.449Z","comments":true,"path":"2022/10/17/JavaScript——基础篇01/","link":"","permalink":"http://kouqiang.space/2022/10/17/JavaScript%E2%80%94%E2%80%94%E5%9F%BA%E7%A1%80%E7%AF%8701/","excerpt":"","text":"JavaScript——基础篇01一、入门介绍等（一）JavaScript的组成部分： ECMAScript 整个JavaScript的核心，包含基本语法、变量、关键字、保留字、数据类型、语句、函数等，各平台都使用ECMA标准，因此不存在不同系统不兼容问题。 123ECMAScript核心——JavaScript面向对象编程Java 是面向对象，写Java程序，写类和对象。而JavaScript是基于对象，写Js，不用创建类，使用Js内部已经定义好的对象。 DOM 文档对象模型Document Object Model，包含整个HTML页面的内容； BOM 浏览器对象模型Broswer Object Model，包含整个浏览器相关内容。BOM没有规范标准，因此提供的方法可能存在兼容性问题。 （二）基本语法规则1.区分大小写2.变量是弱类型的定义变量只用var运算符，变量无特定类型，可以用var初始化任意值。 因此，可以随时改变变量所存储数据的类型（尽量避免这样做！）。 3.每行代码结尾的分号;可省略，但不建议这样做！4.注释有两种：单行和多行与Java一样，单行注释用//标记开始，多行注释用/* 注释内容 */标记。 5.括号表示代码块从Java中借鉴代码块的概念，即表示一系列应该按顺序执行的语句，用大括号&#123;&#125;括起来。 （三）变量1.变量初始化和作用域js中的变量可以不必初始化，用var初始化的变量是局部变量，没有用var初始化的变量是全局变量（即使写在方法内部！）： 12var test01 = &quot;19083&quot;; //变量test01是局部变量；test02 = test01 + &quot;10107&quot;; //test02是全局变量。 2.关键字和保留字与Java类似，定义变量方法名等都不要乱用即可。 3.原始数据类型ECMAScript有五种原始类型：Undefined、Null、Boolean、Number、String。 当变量声明但未进行赋值时，它此时的类型就是Undefined，而null是空对象的引用。 对某变量或值调用typeof运算符可返回该变量的类型： 变量原始类型 调用typeof的返回值 Undefined undefined Boolean boolean Number number Null object String string （四）运算符一元运算符、位运算符、逻辑运算符、加减乘除号和逗号、条件运算符、赋值运算符关系运算符都与Java一样，不一样的只有： 等性运算符=： 单个等号为赋值运算符，与Java相同； 两个等号==： 仅比较变量的值不计较变量类型； 不是同一数据类型的变量会先进行类型转换再比较； 三个等号===： 比较变量的类型和值，先比较类型，如果数据类型不相等那么直接返回false，类型相同再比较值； 没有任何类型转换； 如果两个值都是null或都是undefined那么返回true，null和undefined类型比较则返回false； 如果两个值都是布尔类型的true或false，那么返回true，否则返回false； 其它与Java一致 二、应用1.获取元素内容（1）根据元素id获取： 1document.getElementById(&quot;ID名&quot;); 根据id查找元素，返回类型为Dom对象，不存在则返回null，找到多个则返回第一个。 （2）根据元素class获取： 1document.getElementsByClass(&quot;class名&quot;); 根据class属性值查找元素，返回元素集合，不存在则返回**空集合(不是null)**。 （3）根据元素name获取： 1document.getElementByName(&quot;name属性值&quot;); 根据name属性值查找元素，返回元素集合，不存在则返回**空集合(不是null)**。 （4）根据元素标签名获取： 1document.getElementsByTagName(&quot;标签名&quot;); 根据标签名查找元素，返回元素集合，不存在则返回**空集合(不是null)**。 注：getElementById()返回的是DOM对象,可以直接操作,而后三者返回的是DOM对象的集合,必须加个索引值才能对里面的对象进行操作! 举个栗子🌰： 12345678910111213...&lt;script&gt; window.onload = function()&#123; //获取指定位置元素对象： document.getElementById(&quot;idName&quot;); //获取指定位置元素输入的值： var uName = document.getElementById(&quot;username&quot;).value; alert(uName); var divList = document.getElementsByTagName(&quot;div&quot;); alert(divList[0]); &#125; &lt;/script&gt;... 2.DOM和BOM方法（1）DOM方法（2）BOM方法可在任意位置直接调用","categories":[{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"学习总结","slug":"学习总结","permalink":"http://kouqiang.space/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/tags/%E5%89%8D%E7%AB%AF/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://kouqiang.space/tags/JavaScript/"}],"author":"寇强"},{"title":"HTML学习总结","slug":"Html学习总结","date":"2022-07-19T15:55:00.000Z","updated":"2023-01-14T11:36:08.239Z","comments":true,"path":"2022/07/19/Html学习总结/","link":"","permalink":"http://kouqiang.space/2022/07/19/Html%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/","excerpt":"","text":"HTML学习总结123456789101112&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;页面标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; ... &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 一、关于HTML（一）.htm和.html文件的区别1、.htm与.html没有本质上的区别，表示的是同一种文件，只是适用于不同的环境之下。2、DOS仅能识别8+3的文件名，所以*.htm的命名方法可以被DOS识别，而*.html的文件命名方式不能被之识别。3、在UNIX系统中，网页必须使用.html扩展名，如果是.htm，在浏览器中打开时则出现源代码；Windows中支持两种扩展名。也可以说，htm和html是Windows和UNIX对抗的产物。4、如果在网页中同时存在index.html与index.htm，浏览器将优先解释index.html。 （二）侧重点HTML 是主要应用于网页的结构，所以要在学习的时候要记住：关注标签的语义而不是样式。样式这些展现出来的是CSS的作用 ，所以需要去关注的是标签的意义。如 &lt; strong &gt;和&lt; b &gt; 前者是用来强调内容的重要性，而后者只是为了加粗字体，但是二者表现出的效果是一样的。其次还有例如标题的大小h1~h6 这些的意义是用来体现该部分的重要性，而不是为了去设置他的大小，设置大小完全可以利用css去完成。还有当你编写的代码出现有些问题时 ，浏览器会主动纠正 ，&lt; p &gt;元素里不能放任何块元素。 （三）其它1.目前HTML标签是不区分大小写的，但还是建议规范代码格式以提高可读性！2.元素可以拥有属性，属性值用双引号引起来，如&lt;a href=&quot;romanticism.space&quot;&gt;； 二、基本标签（body部分）1.标题标签h1~h6依次变小123456&lt;h1&gt;标题&lt;/h1&gt;&lt;h2&gt;标题&lt;/h2&gt;&lt;h3&gt;标题&lt;/h3&gt;&lt;h4&gt;标题&lt;/h4&gt;&lt;h5&gt;标题&lt;/h5&gt;&lt;h6&gt;标题&lt;/h6&gt; 2.段落标签123&lt;p&gt; 用于划分段落&lt;/p&gt; 3.换行标签1&lt;br /&gt; 4.分隔线标签1&lt;hr /&gt; 5.注释标签&lt;!--注释--&gt;1234&lt;!--注释任意内容单多行无所谓--&gt; 6.常用文本格式标签12345678910111213&lt;b&gt;加粗&lt;/b&gt;&lt;i&gt;倾斜&lt;/i&gt;&lt;u&gt;下划线&lt;/u&gt;&lt;del&gt;删除线表删除&lt;/del&gt;&lt;ins&gt;下划线表插入&lt;/ins&gt;&lt;sub&gt;文本变为下标&lt;/sub&gt;&lt;sup&gt;文本变为上标&lt;/sup&gt;&lt;pre&gt;保留空格和换行&lt;/pre&gt;&lt;blockquote&gt; 缩进以表示引用&lt;/blockquote&gt;.&lt;code&gt;字符内容等宽显示以表示代码片段&lt;/code&gt;!!!??? 7.超链接标签&lt;a&gt;&lt;/a&gt;在html4 123456&lt;a href=&quot;&quot; target=&quot;_blank&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;!--href属性定义超链接的目标target=&quot;_blank&quot;属性定义该连接在新标签页中打开title=&quot;&quot;属性定义鼠标悬停在连接上时现实的文字提示--&gt; &lt;a&gt;标签中name锚点的用法 1234567&lt;a name=&quot;name01&quot;&gt;文章标题&lt;/a&gt;......&lt;a href=&quot;name01&quot;&gt;点此回到顶部&lt;/a&gt;&lt;!--name属性创建“锚点”，将任一&lt;a&gt;标签的href值设置为此锚点名，点击链接则会跳转到该锚点处。创建的这种带有锚点的标签称为“片段标识符”--&gt; 8.字符实体——html文件中特殊字符的正确显示当要求在页面显示如”&lt;”、”&gt;”或者空格等这种特殊字符时，需要用到字符实体代替输入以避免语法冲突。 注：字符实体是由&amp;号、实体或#实体编号、半角分号三部分组成的，实际应用中使用实体名或实体编号都可以！ 以下是常用字符实体： 显示结果 说明 Entity Name实体名字 Entity Number实体编号 显示一个空格 &amp;nbsp; &amp;#160; &lt; 小于 &amp;lt; &amp;#60; &gt; 大于 &amp;gt; &amp;#62; &amp; &amp;符号 &amp;amp; &amp;#38; “ 半角双引号 &amp;quot; &amp;#34; © 版权 &amp;copy; &amp;#169; &amp;reg; 注册商标 &amp;reg; &amp;#174; &amp;times; 乘号 &amp;times; &amp;#215; &amp;divide; 除号 &amp;divide; &amp;#247; 更多实体编码：常用HTML语言特殊字符对照表(ISO Latin-1字符集) 9.表格和列表（1）表格 表格：是&lt;table&gt;&lt;/table&gt;，表格内包含的行是&lt;tr&gt;&lt;/tr&gt;，行内包含单元格&lt;td&gt;&lt;/td&gt;或&lt;th&gt;&lt;th/&gt; 123456789101112131415161718&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;60%&quot; height=&quot;200&quot;&gt; &lt;caption&gt;表格名称&lt;/caption&gt; &lt;tr&gt;&lt;!--表头--&gt; &lt;th&gt;加粗显示的表头&lt;/th&gt; &lt;th&gt;加粗显示的表头&lt;/th&gt; &lt;th&gt;加粗显示的表头&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt;&lt;!--第一行--&gt; &lt;td&gt;单元格内容&lt;/td&gt; &lt;td&gt;单元格内容&lt;/td&gt; &lt;td&gt;单元格内容&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;&lt;!--第二行--&gt; &lt;td&gt;单元格内容&lt;/td&gt; &lt;td&gt;单元格内容&lt;/td&gt; &lt;td&gt;单元格内容&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 注：列标签 与 的区别： 里的文本内容会以粗体表示，且默认居中，而 里的文本内容是不加粗、默认居左的；所以 一般用来做表头， 一般用来填数据。 表格的属性： 1234567891011&lt;!--align 规定对齐方式，位于&lt;table&gt;标签内时定义整张表格与其他元素的对齐方式， 位于&lt;tr&gt;&lt;td&gt;内时定义单元格内文字的对齐方式border 定义表格所有内外边框宽度，位于&lt;table&gt;标签内时定义整张表格所有边框宽度，位于&lt;tr&gt;&lt;td&gt;等标签内无效width 可用于整张表或某列定义其宽度height 可用于整张表或某行定义其高度cellpadding 单元格内边距，默认有数值，但无需变动cellspacing 单元格外边距，默认有数值，要去掉需设置为0！--&gt; 合并单元格 需要注意的是，这里并不是真正的将两个单元格合并为一个了，而是将源单元格按照合并的数值和方向放大，随即我们应该手动删除多出来的单元格以达到看上去合并了的效果！ 1234&lt;!--行合并：rowspan=&quot;&quot; 默认向下合并，值填总共合并了单元格的数量，填1或0都无效果！列合并：colspan=&quot;&quot; 默认向右合并，值同上--&gt; 其它补充 单元格内可以嵌套表格，以实现较为复杂的布局 … （2）列表 ①有序列表 123456&lt;ol&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; ...&lt;/ol&gt; ②无序列表 123456&lt;ul type=&quot;disc&quot;&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; ...&lt;/ul&gt; 属性type定义项前符号的样式，可选样式有disc黑圆点，circle空心圆，square黑色方块，默认为disc。 ③自定义列表 自定义列表不是一列项目，而是项目及其注释的组合。 列表以&lt;dl&gt;标签开始，每个自定义列表项以&lt;dt&gt;开始，每个自定义列表项的描述以&lt;dd&gt;开始。 12345678&lt;dl&gt; &lt;dt&gt;苹果&lt;/dt&gt; &lt;dd&gt;又大又红&lt;/dd&gt; &lt;dd&gt;apple&lt;/dd&gt; &lt;dt&gt;香蕉&lt;/dt&gt; &lt;dd&gt;又香又甜&lt;/dd&gt; &lt;dd&gt;banana&lt;/dd&gt;&lt;/dl&gt; 10.&lt;iframe&gt;框架标签 使用框架(iframe)，可以实现在一个浏览器窗口同时显示多个网页。 1&lt;iframe src=&quot;romanticism.space&quot; height=&quot;500px&quot; width=&quot;1080px&quot; frameborder=&quot;1px&quot; scrolling=&quot;auto&quot; align=&quot;top&quot;&gt;这里的文字不会显示，除非遇到不支持该标签的浏览器&lt;/iframe&gt; 框架属性 属性height和width定义框架的尺寸 frameborder定义是否显示边框，值1为显示，0为不显示，缺省值为1！ scrolling定义是否显示滚动条，可取值为yes、no、auto（是、否、自动） align设置整个框架相对于其他元素的对齐方式，可选值有left、right、top、middle、bottom五个。（用处不大好像？） 注：HTML5不支持&lt;frame&gt;和&lt;frameset&gt;，HTML4.1不支持&lt;iframe&gt;，可以把需要的文本放在&lt;iframe&gt;和&lt;/iframe&gt;内，以应对无法理解&lt;iframe&gt;的浏览器！ 11.表单所有的HTML标签中，表单标签是最重要的。在实际开发中，最经典的实例就是用户注册，覆盖了表单标签的所有元素。 （1）表单相关标签：①表单标签&lt;form&gt;&lt;form&gt;表单标签，在HTML页面创建一个表单，表单标签在浏览器上没有任何显示。如果数据需要提交到服务器，负责收集数据的标签必须存放在表单标签内。 action属性：请求路径，确定表单提交到服务器的地址（路径）； method属性：请求方式。常用取值：get和post： get（默认值）： 提交的数据追加在请求路径上。例如：/index.html?username=jack&amp;password=1230456，数据格式k&#x2F;v，追加是使用?连接，之后的每一个数据使用&amp;连接； 因为请求路径长度有限，所以get请求提交的数据也有限。 post： 提交的数据不在请求路径上追加（即不显示在地址栏上）。 onsubmit属性：为表单的提交绑定一个事件句柄函数，当用户点击提交按钮时，这个事件句柄函数就会被调用，如果函数返回false则表单不会被提交,如果返回其他的或什么都没有返回，则表单会提交。 ②输入域标签&lt;input&gt; &lt;input&gt;标签用于获得用户输入的信息，type属性值不同，搜集的方式&#x2F;内容不同，是表单里最常用的标签。 type属性： text：文本框，单行输入字段，供用户输入文本，默认宽度为20个字符； password：密码框，输入的内容加密显示； radio：单选框，表示一组互斥选项按钮的其中一个。同时设置相同的name属性才会正确生效，当一个按钮被选中，则其他的按钮变为非选中状态； submit：在页面自动生成提交按钮，点此会把表单数据提交到服务器。一般不写name属性，否则将把“提交”两个字提交到服务器；提交按钮默认是“提交”两字，若要更改其他提示文字，需定义value属性，其值就会变成按钮上的字！ checkbox：复选框； file：文件上传； hidden：隐藏字段，数据会发送到服务器，但浏览器不进行显示； reset：重置按钮，将表单重置为默认值； image：带图形&#x2F;图案&#x2F;图片的提交按钮，通过src给按钮设置图片，作用与submit一样； button：普通按钮，通常与JavaScript结合使用。 name属性： 元素名，如果需要将表单数据提交到服务器，必须提供name属性值，浏览器通过属性值获得提交的数据。 value属性： 设置input标签的默认值。应用到submit和reset里为设置按钮显示的文字。 size属性： 设置大小。 checked属性： 单选框或复选框设置默认被选中。 readonly： 是否只读。 disabled： 是否可用。 maxlength： 允许输入的最大长度。 ③下拉列表标签&lt;select&gt;可进行多选或单选，由子标签&lt;option&gt;指定选择项。 name属性： 发送给服务器的名称。 multiple属性： 不写默认单选，该属性取值为自身时表示多选。 size属性： 多选时，可见选项的数目。 &lt;option&gt;子标签： selected属性：默认该项已选。 value：发送给服务器的选项值。 ⑤文本域标签&lt;textarea&gt; &lt;textarea&gt;文本域，多行的文本输入控件。 cols属性：文本域的列数。 rows属性：文本域的行数。 ⑥按钮标签&lt;button&gt; &lt;button type=&quot;button|reset|submit&quot;&gt; 按钮标签一般很少使用，提供“普通&#x2F;重置&#x2F;提交”功能，不同的浏览器默认值不同。 （2）总结02 123456789101112131415&lt;form action=&quot;https://www.bilibili.com&quot; method=&quot;get&quot; onsubmit=&quot;return onCheckHanShu()&quot;&gt; 用户名&lt;input type=&quot;text&quot; id=&quot;uName&quot; /&gt; 密码&lt;input type=&quot;password&quot; id=&quot;uPaswd&quot; /&gt; 确认密码&lt;input type=&quot;password&quot; id=&quot;uPaswd2&quot; /&gt; 简介&lt;textarea&gt;&lt;/textarea&gt; 性别：男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; /&gt;女&lt;input type=&quot;radio&quot; name=&quot;sex&quot; /&gt; 爱好：音乐&lt;input type=&quot;checkbox&quot; value=&quot;music&quot; /&gt;运动&lt;input type=&quot;checkbox&quot; value=&quot;sport&quot; /&gt; 你喜欢的水果： &lt;select name=&quot;fruit&quot; size=&quot;0&quot; multiple&gt; &lt;option value=&quot;apple&quot;&gt;林檎&lt;/option&gt; &lt;option value=&quot;banana&quot;&gt;香蕉&lt;/option&gt; &lt;option value=&quot;orange&quot;&gt;橙子&lt;/option&gt; &lt;/select&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; onsubmit=&quot;&quot; /&gt;&lt;/form&gt; HTML 表单(Form)是 HTML 的一个重要部分，主要用于采集和提交用户输入的信息。 1.表单的组成部分： 学习 HTML 表单(Form)最关键要掌握的有三个要点： 表单控件(Form Controls) 通过 HTML 表单的各种控件，用户可以输入文字信息，或者从选项中选择，以及做提交的操作。比如&lt;input type= &quot;text&quot;&gt;就是一个表单控件，表示一个单行输入框。 Action 表单里的 action 就指明了处理表单信息的文件。提交表单的地址 Method 至于 method，表示了发送表单信息的方式。method 有两个值：get 和post。get 的方式是将表单控件的 name&#x2F;value 信息经过编码之后，通过URL 发送(你可以在地址栏里看到)。而 post 则将表单的内容通过 http 发送，你在地址栏看不到表单的提交信息。 2.表单常用控件： 表单控件 说明 &lt;input type=&quot;text&quot; /&gt; 单行文本输入框 &lt;input type=&quot;password&quot; /&gt; 密码输入框，输入的内容显示为星号* &lt;input type=&quot;radio&quot; /&gt; 单选框 &lt;input type=&quot;checkbox&quot; /&gt; 复选框 &lt;textarea&gt;&lt;/textarea&gt; 多行文本输入框 &lt;input type=&quot;submit&quot;&gt; 将表单信息提交给action指向的文件 &lt;select&gt;&lt;option&gt;&lt;option&gt;&lt;/select&gt; 见下文详解 &lt;input type=&quot;file&quot;&gt; 上传文件 &lt;input type=&quot;reset&quot;&gt; 全部重做&#x2F;清空按钮 ①单行文本输入框 默认占一行 1&lt;input type=&quot;text&quot; /&gt; ②密码输入框 默认占一行 1&lt;input type=&quot;password&quot; /&gt; ③单选框 对于如性别等只允许单选的一组选项可设置单选框，对同一主题的一组单选框必须设置属性name的值相同才能正确生效！ 默认不换行！ 123&lt;input type=&quot;redio&quot; name=&quot;sex&quot; /&gt;男&lt;input type=&quot;redio&quot; name=&quot;sex&quot; /&gt;女&lt;input type=&quot;redio&quot; name=&quot;sex&quot; checked=&quot;checked&quot; /&gt;保密 checked属性定义该选择框默认为已选状态 ④复选框 同上，复选框允许用户在一组选项里选择多个选项，前提是设置属性name的值为相同内容！ 默认不换行！ 123&lt;input type=&quot;checkbox&quot; value=&quot;music&quot; name=&quot;habbit&quot; /&gt;&lt;input type=&quot;checkbox&quot; value=&quot;sport&quot; name=&quot;habbit&quot; /&gt;&lt;input type=&quot;checkbox&quot; value=&quot;打电动&quot; name=&quot;habbit&quot; checked=&quot;checked&quot; /&gt; 属性value的值为提交上去的的实际后台的记录。 ⑤多行文本 1&lt;textarea cols=&quot;20&quot; rows=&quot;20&quot;&gt;&lt;/textarea&gt; cols定义宽度，rows定义高度，但大小默认是可拖拽的。 ⑥提交submit 1&lt;input type=&quot;submit&quot; /&gt; ⑦下拉列表 下拉列表可做单选也可做多选： 12345&lt;select name=&quot;fruit&quot; size=&quot;3&quot; multiple&gt; &lt;option value=&quot;apple&quot;&gt;林檎&lt;/option&gt; &lt;option value=&quot;banana&quot;&gt;香蕉&lt;/option&gt; &lt;option value=&quot;strawberry&quot;&gt;草莓&lt;/option&gt;&lt;/select&gt; select的属性size定义下拉列表默认显示的行数，其值是数字几就显示为几行文字的高度，不受单位px的影响！ multiple定义是否支持多选，多选状态时客户端可按住Ctrl操作多选！ 总结： 1234567891011121314151617181920212223242526272829303132333435363738394041一、form表单 &lt;form&gt; &lt;!--输入内容--&gt; &lt;input type=&quot;&quot;/&gt; type属性： =&quot;text&quot; 输入文本 =&quot;password&quot; 输入密码 =&quot;hidden&quot; 隐藏的内容 =&quot;radio&quot; 单选框 =&quot;checkbox&quot; 多选框 =&quot;file&quot; 输入/上传文件 =&quot;button&quot; 普通按钮 =&quot;reset&quot; 全部重做/清空按钮 =&quot;submit&quot; 提交按钮 placeholder=&quot;请输入密码&quot; 未输入内容时提示信息 size=&quot;10px&quot; 约束输入框的长度 maxlength=&quot;16&quot; 限制输入内容的最大长度 required=&quot;required&quot; 限制必须输入内容后才可以提交 checked=&quot;checked&quot; 在某项内使用——默认该项已选 name=&quot;&quot; value=&quot;&quot; &lt;!--文本输入域--&gt; &lt;textarea name=&quot;zwjs&quot;&gt; balabalabalabala...... &lt;/textarea&gt; &lt;!--下拉列表--&gt; &lt;select name=&quot;自定义&quot;&gt; &lt;option selected=&quot;selected&quot;&gt;balabala&lt;/option&gt; &lt;option selected=&quot;selected&quot;&gt;balabala&lt;/option&gt; &lt;!--对某一项使用selected时——网页默认选择该项--&gt; &lt;/select&gt; &lt;/form&gt; --总结： 1.用户输入和选择的内容，标签里必须用name命名，选择的内容还必须有默认值value=&quot;xxx&quot; 2.get与post提交方式的区别： get：所有提交的内容会显示在地址栏，不够安全，长度有限制； post：不会在地址栏显示提交的内容，比较安全，长度没有限制。 12.图片标签 1&lt;img src=&quot;img/猪大叔素材 (100).jpg&quot; alt=&quot;你图没了&quot; align=&quot;center&quot; /&gt; 二、头部信息（head部分）12345678910111213&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;网站显示的标题&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./新拟态.css&quot; type=&quot;text/css&quot; /&gt; &lt;script src=&quot;./js/dayNightSwitch.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt; &lt;/script&gt; &lt;style&gt; //这里可以直接写css代码 &lt;/style&gt; &lt;/head&gt; ...&lt;/html&gt; 1.&lt;script&gt;&lt;/script&gt;标签用来引入外部脚本文件，或在其内容中写入脚本代码。 1&lt;script src=&quot;./js/dayNightSwitch.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt; &lt;/script&gt; 1234567891011121314151617&lt;script&gt; window.onload = function()&#123; var btn01 = document.getElementById(&quot;dayNightBtn&quot;); var tips = &quot;day&quot;; var linkList = document.getElementsByTagName(&quot;link&quot;); var imgs = document.getElementById(&quot;dayNightBtn&quot;).src; btn01.onclick = function()&#123; if(tips == &quot;day&quot;)&#123; tips = &quot;night&quot;; linkList[0].href = &quot;./css/新拟态&quot; + tips + &quot;.css&quot;; &#125;else&#123; tips = &quot;day&quot;; linkList[0].href = &quot;./css/新拟态&quot; + tips + &quot;.css&quot;; &#125; &#125; &#125;&lt;/script&gt; 不是单标签，必须成对使用！ src属性：脚本文件的地址； type属性：脚本的类型； charset：脚本的编码方式，可省略。 2.引入外部css文件1&lt;link rel=&quot;stylesheet&quot; href=&quot;./新拟态.css&quot; type=&quot;text/css&quot; /&gt; link标签为单标签； rel属性为链接文件的类型，css文件必须填stylesheet且不可省略！ href为链接文件的地址； type属性为类型，要么省略要么写text/css。 三、其他&lt;font&gt;&lt;/font&gt;标签已不再支持，请用CSS代替！ 其他更多慢慢补充……","categories":[{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"学习总结","slug":"学习总结","permalink":"http://kouqiang.space/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/tags/%E5%89%8D%E7%AB%AF/"},{"name":"Html","slug":"Html","permalink":"http://kouqiang.space/tags/Html/"}],"author":"寇强"},{"title":"DDBot食用指南","slug":"DDBot食用指南","date":"2022-06-16T06:38:00.000Z","updated":"2023-01-09T16:10:26.775Z","comments":true,"path":"2022/06/16/DDBot食用指南/","link":"","permalink":"http://kouqiang.space/2022/06/16/DDBot%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97/","excerpt":"","text":"DDBot食用指南B站专栏介绍：https://www.bilibili.com/read/cv10602230 项目及源代码地址：https://github.com/Sora233/DDBOT 详细配置参考技术文档：https://gitee.com/sora233/DDBOT/blob/master/EXAMPLE.md#watch 官方唯一指定交流群：755612788 获取bot：官方如今不再提供公开BOT，你可以加入官方唯一QQ交流群（755612788）申请使用某些群友爱心人士搭建的BOT（进群礼貌提问大家有没有公开的bot），也可以选择在自己的服务器上搭建。 如果你获取到了群友爱心人士提供的公开bot，那么可以加bot为QQ好友，先将bot拉进自己要部署的群里，然后在群聊或私聊聊天框内直接输入并发送下文中的指令即可完成部署。 ps：私聊bot的话输入的指令必须指定要配置的QQ群号，即-g QQ群号，而在群内直接发送指令则不需要！ 部署步骤&#x2F;指令总结（以私聊bot为例）： 订阅某主播直播和动态提醒： 12/watch -g 群号 主播UID //订阅开播提醒/watch -g 群号 -t news 主播UID //订阅发动态提醒 取消订阅某主播直播和动态提醒： 12/unwatch -g 群号 主播UID //取消订阅开播提醒/unwatch -g 群号 -t news 主播UID //取消订阅发动态提醒 订阅下播提醒： 12/config -g 群号 offline_notify 主播UID on //订阅下播提醒/config -g 群号 offline_notify 主播UID off //取消订阅下播提醒 设置主播转发别人动态时不提醒： 1/config -g 群号 filter not_type 主播UID 转发 取消该设置： 1/config -g 群号 filter clear 主播UID 配置为特定主播@一个或多个特定成员 1/config -g 群号 at -s bilibili 主播UID add QQ号 QQ号 删除配置中的特定成员：（即把add改为remove） 1/config -g 群号 at -s bilibili 主播UID remove QQ号 QQ号 查看配置的成员列表： 1/config -g 群号 at -s bilibili 主播UID show 清空配置的成员列表： 1/config -g 群号 at -s bilibili 主播UID clear 官方QQ群公告：群公告： 本群为DDBOT用户交流群，你在群里提出的建议和吐槽都会得到反馈，平时发现了有趣的v可以发到群里一起D。群内@Q群管家可获取部分问题回复提问之前确保你已经阅读了以下网页内容：DDBOT：https://gitee.com/sora233/DDBOT部署指南：https://gitee.com/sora233/DDBOT/blob/master/INSTALL.md指令示例：https://gitee.com/sora233/DDBOT/blob/master/EXAMPLE.mdFAQ：https://gitee.com/sora233/DDBOT/blob/master/FAQ.mdDDBOT-您的QQ群单推小助手：https://b23.tv/kabe7Ot群主手把手教程：https://b23.tv/k9mmZU1以下是一些通用群规：一、基本上不限制群聊方向，只是不聊政治历史话题。二、禁止发不适合在公共场合打开的图片。 介绍开源项目DDBOT的用法，用机器人来对付主播的阴间突击。本项目禁止商业用途。 唯一指定交流群：755612788项目及源代码地址：https://github.com/Sora233/DDBOTB站专栏介绍：https://www.bilibili.com/read/cv10602230发现BUG或错误可以在本视频或专栏下留言反馈 本文由B站用户乃琳今晚mua哪个编辑","categories":[{"name":"其他工具","slug":"其他工具","permalink":"http://kouqiang.space/categories/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"DDBot","slug":"DDBot","permalink":"http://kouqiang.space/tags/DDBot/"}],"author":"寇强"},{"title":"Kali工具集","slug":"Kali工具集","date":"2022-06-06T19:08:00.000Z","updated":"2023-01-09T16:10:58.594Z","comments":true,"path":"2022/06/07/Kali工具集/","link":"","permalink":"http://kouqiang.space/2022/06/07/Kali%E5%B7%A5%E5%85%B7%E9%9B%86/","excerpt":"","text":"Kali工具集一、存活主机识别（一）arping1.介绍ARP协议是“Address Resolution Protocol”（地址解析协议）的缩写。 在同一以太网中，通过地址解析协议，源主机可以通过目的主机的IP地址获得目的主机的MAC地址。arping程序就是完成上述过程的程序。 arping，用来向局域网内的其它主机发送ARP请求的指令，它可以用来测试局域网内的某个IP是否已被使用。 2.参数释义123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101--help 打印帮助信息 -0 使用此选项可对源IP地址0.0.0.0执行ping操作。 尚未配置接口时，请使用此选项。请注意，这可能无法应答MAC-ping。这是-S 0.0.0.0的别名。 -a 打印ping结果 -A 只计算与请求的地址匹配的地址(这将中断你做的大多数事情。仅当你一次添加多个主机时才有用。) -b 与-0类似，但源广播的源地址（255.255.255.255）。请注意，这可能会使arping没有得到响应，因为这不是主机的正常行为。 -B 如果要寻址255.255.255.255，请使用代替主机。 -c count 只发送计数请求。 -C count 无论-c和-w如何，都只等待计数答复。（个人理解为-c和-w操作失效） -d 查找重复的答复。 如果该答复来自两个不同MAC地址，则以1退出。 -D 收到答复显示为感叹号，信息包丢失显示为点。类似思科设备的泛ping结果显示。 -e 类似-a操作，但是在没有回复时发出哔声 -F 不要在接口名称上大费周章。虽然没有给出这个开关，但是-i会取代该操作。 -g group setgid()设置为此组取代nobody组。 -h 打印帮助信息 -i interface 指定的网卡接口 -m type 用于传入数据包的时间戳类型。ping时使用-vv列出可用数据包。 -p 打开接口的混合模式，当你正在使用的MAC地址不是你自己的，请使用此模式。 -P 发送ARP答复而不是请求。 与-U一起使用。 -q 只显示报错信息 -Q priority 要设置的802.1p优先级。应与802.1Q标记（-V）一起使用。默认值为0。 -r 原始输出:每个回复只显示MAC/IP地址。 -R 原始输出：与-r类似，但显示ip地址，可以与-r组合。 -s MAC 设置源MAC地址 您可能需要与-p一起使用。 -S IP 与-b和-0类似，但源地址已设置。请注意，如果目标没有到IP的路由，则可能无法应答Arping。如果您不拥有所使用的IP，则可能需要打开Promiscious 接口上的-p模式（使用-p）。使用此开关，您可以查找主机拥有的IP地址，而无需自己获取IP地址。 -t MAC 设置要在ping IP地址时使用的目标MAC地址。 -T IP 使用-T作为目标地址，当ping mac不会响应广播ping，但可能对定向广播。 例： 要检查MAC-A的地址，请使用MAC-B和IP-B的知识。 $ arping -S &lt;IP-B&gt;-s &lt;MAC-B&gt; -p &lt;MAC-A&gt; -u ping MAC时，显示index = received / sent，而不只是index = received -U 发送未经请求的ARP。 这会将ARP帧中的目标MAC地址设置为广播地址。 未经请求的ARP用于更新邻居的ARP缓存。 例： $ arping -i &lt;interface&gt;-U &lt;interface IP&gt; -v 详细输出。 使用两次获取更多消息。 -V vlan 设置VLAN标记。默认为无VLAN标记 -w sec 无论是否发送或接收了多少个数据包，都要在ping退出之前指定一个超时时间。 -W sec ping之间的等待时间。 2.实例（1）查看某个IP的MAC地址，检验该主机是否存活1arping 192.168.1.1 -c 1 -c 1表示发送了一个数据包，该部分写在IP地址前后都可。 得到0% unanswered说明存活，100% unanswered说明未存活。 （2）（二）fping（三）hping3（四）masscan（五）thcping6","categories":[{"name":"其他工具","slug":"其他工具","permalink":"http://kouqiang.space/categories/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://kouqiang.space/tags/markdown/"}],"author":"寇强"},{"title":"Linux基础终端指令","slug":"Linux基础终端指令","date":"2022-06-01T01:59:00.000Z","updated":"2023-01-09T16:11:07.233Z","comments":true,"path":"2022/06/01/Linux基础终端指令/","link":"","permalink":"http://kouqiang.space/2022/06/01/Linux%E5%9F%BA%E7%A1%80%E7%BB%88%E7%AB%AF%E6%8C%87%E4%BB%A4/","excerpt":"","text":"Linux基础终端指令一、文本文件操作基础命令1.查看当前路径1pwd 2.切换路径1cd /var/MyProject01 3.创建文件夹1mkdir MyProject01 4.复制文件12cp /root/123.txt /var/MyProject01//将root目录下的123.txt文件复制到/var/MyProject01目录下 5.移动文件1mv /root/123.txt /var/MyProject01 6.删除文件1rm 123.txt 7.删除整个文件夹1rm -rf MyProject01 8.查看文件内容1cat 123.txt 注：该命令不能用于查看文件夹 9.查看文件大小1du -h 123.txt 10.查看某路径下的所有文件和文件夹1ls 路径名 11.查看当前路径下所有文件夹和文件1ls 12.复制粘贴文本内容ctrl+insert和shift+insert，或ctrl+shift+c和ctrl+shift+v 清屏1clear 桌面路径1cd /home/kali/Desktop","categories":[{"name":"Linux","slug":"Linux","permalink":"http://kouqiang.space/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://kouqiang.space/tags/Linux/"}],"author":"寇强"},{"title":"kali安装和前期准备","slug":"kali安装及其准备","date":"2022-06-01T01:55:00.000Z","updated":"2023-01-09T16:10:49.440Z","comments":true,"path":"2022/06/01/kali安装及其准备/","link":"","permalink":"http://kouqiang.space/2022/06/01/kali%E5%AE%89%E8%A3%85%E5%8F%8A%E5%85%B6%E5%87%86%E5%A4%87/","excerpt":"","text":"kali安装和前期准备一、安装虚拟机（VMware）教程CSDN上一搜一大堆！ 二、安装Kali（2021）教程CSDN上一搜一大堆！ 默认用户名和密码： 旧版本是root和toor，新版本默认用户名和密码都是kali 三、配置kali1.改用户密码和用户名参考链接：新kali版本，root默认密码_繁华king的博客-CSDN博客_kali root密码 Kali Linux 2021.2修改Root用户密码，开启ssh，修改中文语言_菜头同学的博客-CSDN博客_kali linux root 密码 步骤： 123456789sodu su输入原密码passwd root两次输入新密码重启系统 2.改语言为中文①sudo dpkg-reconfigure locales ②要求输入用户密码 ③在弹出的窗口中的列表里上下左右键和空格键选择，取消en_US.UTF-8 UTF-8，选择zh_CN.UTF-8 UTF-8，使用TAB键选择“ok”按钮回车。 注：旧版Kali-Linux修改语言后需安装中文字体，否则中文显示乱码 3.修改更新源并更新步骤：终端用sudo vim /etc/apt/sources.list指令打开该文件，将原来的kali官方源注释掉，添加新的国内的源（中科大源或阿里的源），重启完成更改，然后更新。 注：此时用的是默(万)认(恶)的vim编辑器！ 参考链接：Kali2021修改更新源_zxl2605的博客-CSDN博客_kali更新源 kali下载完成后你要做的那些事（换源，更新，中文输入法）_玄予的博客-CSDN博客_kali官方源 ①sudo vim /etc/apt/sources.list ②按i进入编辑模式，在原来的代码前敲上#，在下方添加如下代码123456#中科大源deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib#阿里云源deb http://mirrors.aliyun.com/kali kali-rolling main non-free contribdeb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib 按Esc退出编辑模式，输入: wq，回车，重启kali，更换完成。 ③更新系统在终端输入： 1234apt update回车apt -y full-upgrade回车 等待…总共七百多M，我200k&#x2F;s的网速得等两个多小时。 完成。 3.安装中文输入法（我安的搜狗）①下载搜狗输入法Linux版安装包（官网https://pinyin.sogou.com/linux） 可以在kali里的Firefox里面下载，也可主机下载好后通过共享文件夹共享到kali里面。 ②在文件存放路径下打开终端或在终端内将路径改到文件存放目录（我的是&#x2F;home&#x2F;kali&#x2F;Downloads），进入root，ls指令显示当前文件夹下所有文件和文件夹。 ③终端dpkg -i 软件包名安装软件（我这里是dpkg -i sogoupinyin_4.0.1.2123_amd64.deb） 出现问题 不慌，现在按照它所需要的软件包一个一个安装，或者也可以直接使用apt -f install命令来解决依赖包问题 完成： 再次dpkg -i sogoupinyin_4.0.1.2123_amd64.deb reboot重启完成安装 在任何需要输入的地方都使用ctrl+空格键来开启搜狗输入法，shift键切换中英文。 4.配置共享文件夹（需提前安装vmtools）①VMware中设置 ②kali内挂载共享文件夹 kali里创建共享文件夹目录： 在路径文件系统/mnt/下新建hgfs文件夹，再在此文件夹内以你vmware中的共享文件夹为名的新文件夹&#96;&#96; 可以在窗口中直接操作，也可以在终端操作（都需要root权限） 挂载共享文件夹 12/usr/bin/vmhgfs-fuse .host:/share_kali /mnt/hgfs/share_kali -o subtype=vmhgfs-fuse,allow_other//注意：我这里的目标路径是/share_kali 检查下： 设置每次开机自动挂载共享文件夹，重启。 在/etc/fstab文件中添加以下内容： 1.host:/share_kali /mnt/hgfs/share_kali fuse.vmhgfs-fuse allow_other 0 0 保存，重启即可 参考帖子：设置VMware中Kali共享文件夹_jun2016425的博客-CSDN博客_kali共享文件夹位置 四、安装靶机","categories":[{"name":"kali","slug":"kali","permalink":"http://kouqiang.space/categories/kali/"}],"tags":[{"name":"kali","slug":"kali","permalink":"http://kouqiang.space/tags/kali/"},{"name":"软件安装","slug":"软件安装","permalink":"http://kouqiang.space/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"}],"author":"寇强"},{"title":"Typora快捷键大全","slug":"Typora快捷键大全","date":"2022-05-23T09:44:00.000Z","updated":"2023-01-09T16:11:38.852Z","comments":true,"path":"2022/05/23/Typora快捷键大全/","link":"","permalink":"http://kouqiang.space/2022/05/23/Typora%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/","excerpt":"","text":"目录一、菜单栏二、文件三、编辑四、段落五、格式六、视图 一、菜单栏文件：alt+F 编辑：alt+E 段落：alt+P 格式：alt+O 视图：alt+V 主题：alt+T 帮助：alt+H 二、文件新建：Ctrl+N 新建窗口：Ctrl+Shift+N 打开：Ctrl+O 快速打开：Ctrl+P 保存：Ctrl+S 另存为：Ctrl+Shift+S 偏好：Ctrl+, 关闭：Ctrl+W 三、编辑撤销：Ctrl+Z 重做：Ctrl+Y 剪切：Ctrl+X 复制：Ctrl+C 粘贴：Ctrl+V 复制为MarkDown：Ctrl+Shift+C 粘贴为纯文本：Ctrl+Shift+V 全选：Ctrl+A 选中当前行&#x2F;句：Ctrl+L 选中当前格式文本：Ctrl+E 选中当前词：Ctrl+D 跳转到文首：Ctrl+Home 跳转到所选内容：Ctrl+J 跳转到文末：Ctrl+End 查找：Ctrl+F 查找下一个：F3 查找上一个：Shift+F3 替换：Ctrl+H 四、段落标题：Ctrl+1&#x2F;2&#x2F;3&#x2F;4&#x2F;5 段落：Ctrl+0 增大标题级别：Ctrl+&#x3D; 减少标题级别：Ctrl± 表格：Ctrl+T 代码块：Ctrl+Shift+K 公式块：Ctrl+Shift+M 引用：Ctrl+Shift+Q 有序列表：Ctrl+Shift+[ 无序列表：Ctrl+Shift+] 增加缩进：Ctrl+] 减少缩进：Ctrl+[ 五、格式加粗：Ctrl+B 斜体：Ctrl+I 下划线：Ctrl+U 代码：Ctrl+Shift+&#96; 删除线：Alt+Shift+5 超链接：Ctrl+K 图像：Ctrl+Shift+I 清除样式：Ctrl+ 六、视图显示隐藏侧边栏：Ctrl+Shift+L 大纲视图：Ctrl+Shift+1 文档列表视图：Ctrl+Shift+2 文件树视图：Ctrl+Shift+3 源代码模式：Ctrl+&#x2F; 专注模式：F8 打字机模式：F9 切换全屏：F11 实际大小：Ctrl+Shift+0 放大：Ctrl+Shift+&#x3D; 缩小：Ctrl+Shift+ - 应用内窗口切换：Ctrl+Tab 打开DevTools：Shift+F12","categories":[{"name":"Typora","slug":"Typora","permalink":"http://kouqiang.space/categories/Typora/"}],"tags":[{"name":"Typora","slug":"Typora","permalink":"http://kouqiang.space/tags/Typora/"},{"name":"快捷键","slug":"快捷键","permalink":"http://kouqiang.space/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"}],"author":"寇强"},{"title":"md文档进阶操作","slug":"md文档进阶操作","date":"2021-12-06T02:59:00.000Z","updated":"2023-01-09T16:11:20.126Z","comments":true,"path":"2021/12/06/md文档进阶操作/","link":"","permalink":"http://kouqiang.space/2021/12/06/md%E6%96%87%E6%A1%A3%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C/","excerpt":"","text":"标题 jdnvjdvfn vrkvid idfnvfi hvruevur Win + Shift + s ：截强制换行图 1234567graph LRA[方形] --&gt;B(圆角) B --&gt; C&#123;条件a&#125; C --&gt;|a=1| D[结果1] C --&gt;|a=2| E[结果2] F[横向流程图] 123456789sta=&gt;start: 开始框op=&gt;operation: 处理框cond=&gt;condition: 判断框(是或否?)sub1=&gt;subroutine: 子流程io=&gt;inputoutput: 输入输出框e=&gt;end: 结束框sta-&gt;op-&gt;condcond(yes)-&gt;io-&gt;econd(no)-&gt;sub1(right)-&gt;op 1234567891011Title: 标题：复杂使用对象A-&gt;对象B: 对象B你好吗?（请求）Note right of 对象B: 对象B的描述Note left of 对象A: 对象A的描述(提示)对象B--&gt;对象A: 我很好(响应)对象B-&gt;小三: 你好吗小三--&gt;&gt;对象A: 对象B找我了对象A-&gt;对象B: 你真的好吗？Note over 小三,对象B: 我们是朋友participant CNote right of C: 没人陪我玩","categories":[{"name":"其他工具","slug":"其他工具","permalink":"http://kouqiang.space/categories/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://kouqiang.space/tags/markdown/"}],"author":"寇强"},{"title":"其他工具使用","slug":"番外_相关工具使用及内容补充","date":"2021-12-06T02:59:00.000Z","updated":"2023-01-09T16:11:59.698Z","comments":true,"path":"2021/12/06/番外_相关工具使用及内容补充/","link":"","permalink":"http://kouqiang.space/2021/12/06/%E7%95%AA%E5%A4%96_%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%86%85%E5%AE%B9%E8%A1%A5%E5%85%85/","excerpt":"","text":"✨番外：工具使用及内容补充Vim编辑器狗都不用！ 一、Vim编辑器食用教程vim编辑器有如下三种模式： 基本模式： 移动光标： 键盘上下左右 hjkl键左下上右 space空格向左，backspace向右，enter移动到下一行首，短横【-】键移动到上一行首 删除字符： x（删除光标右侧一个字符，相当于delete），nx（delete掉n个字符），dd（删除当前行），ndd（向下删除包括当前行的n行内容） 写入模式：基本模式按i进入该模式，就可以写入代码了，写完按Esc回到基本模式 低行模式&#x2F;命令行模式：基本模式下输入冒号（我的是按Shift + ;键）进入该模式，该模式下每输一次指令都会自动回到基本模式 w + 回车：保存以编辑内容 q + 回车：退出编辑器 更多教程参考：Linux上vi(vim)编辑器使用教程 - VPS侦探 (vpser.net) win10vim编辑器怎么编辑_百度知道 (baidu.com) 二、为git配置其他文本编辑器在GitBash窗口中输入（以我的EditPlus为例）： 1git config --global core.editor &quot;\\&quot;D:\\KQAPP\\editPlus\\EditPlus.exe\\&quot;&quot; 注意引号和反斜杠\\的数量和位置！！！ 三、git指令123456789101112131415161718192021222324252627ssh //检查是否安装了SSHssh keygen -trsa //在本机生成公钥和私钥ssh -T git@github.com //查看git是否绑定GitHub账号git status //查看当前仓库状态git log //查看仓库提交日志git clone //将远程仓库克隆到本地git config --global user.name &quot;自己的GitHub用户名&quot; //第一次提交之前都需要设置和GitHub一致的用户名和邮箱地址git config --global user.email &quot;账号绑定的邮箱地址&quot; //注意空格和引号的位置及数量！git add 文件名 //将文件添加到缓存区git add -u //只处理已经修改或已删除的文件，不会处理新建的文件git commit -m &quot;这里的备注内容随便填&quot; //将缓存区的文件添加到本地仓库gir commit -a &quot;&quot; //git push //将本地仓库的新文件上传到远程主机git pull //将远程主机与本地仓库的分支合并git branch //查看本地仓库分支git branch -r //查看远程仓库分支git rm -rf 文件名或文件夹名 //删除某文件（夹）rm 文件名 //删除某文件git restore 文件名 //把某文件从缓存区撤销，回到未被追踪的状态pwd //显示当前工作路径","categories":[{"name":"其他工具","slug":"其他工具","permalink":"http://kouqiang.space/categories/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Vim编辑器","slug":"Vim编辑器","permalink":"http://kouqiang.space/tags/Vim%E7%BC%96%E8%BE%91%E5%99%A8/"},{"name":"git","slug":"git","permalink":"http://kouqiang.space/tags/git/"}],"author":"寇强"}],"categories":[{"name":"考研408笔记","slug":"考研408笔记","permalink":"http://kouqiang.space/categories/%E8%80%83%E7%A0%94408%E7%AC%94%E8%AE%B0/"},{"name":"建筑学","slug":"建筑学","permalink":"http://kouqiang.space/categories/%E5%BB%BA%E7%AD%91%E5%AD%A6/"},{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/categories/%E5%89%8D%E7%AB%AF/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://kouqiang.space/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"其他工具","slug":"其他工具","permalink":"http://kouqiang.space/categories/%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7/"},{"name":"Linux","slug":"Linux","permalink":"http://kouqiang.space/categories/Linux/"},{"name":"kali","slug":"kali","permalink":"http://kouqiang.space/categories/kali/"},{"name":"Typora","slug":"Typora","permalink":"http://kouqiang.space/categories/Typora/"}],"tags":[{"name":"考研笔记","slug":"考研笔记","permalink":"http://kouqiang.space/tags/%E8%80%83%E7%A0%94%E7%AC%94%E8%AE%B0/"},{"name":"数据结构","slug":"数据结构","permalink":"http://kouqiang.space/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"http://kouqiang.space/tags/%E7%AE%97%E6%B3%95/"},{"name":"建筑学","slug":"建筑学","permalink":"http://kouqiang.space/tags/%E5%BB%BA%E7%AD%91%E5%AD%A6/"},{"name":"SU","slug":"SU","permalink":"http://kouqiang.space/tags/SU/"},{"name":"学习总结","slug":"学习总结","permalink":"http://kouqiang.space/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"},{"name":"前端","slug":"前端","permalink":"http://kouqiang.space/tags/%E5%89%8D%E7%AB%AF/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://kouqiang.space/tags/JavaScript/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://kouqiang.space/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"CSS","slug":"CSS","permalink":"http://kouqiang.space/tags/CSS/"},{"name":"Html","slug":"Html","permalink":"http://kouqiang.space/tags/Html/"},{"name":"DDBot","slug":"DDBot","permalink":"http://kouqiang.space/tags/DDBot/"},{"name":"markdown","slug":"markdown","permalink":"http://kouqiang.space/tags/markdown/"},{"name":"Linux","slug":"Linux","permalink":"http://kouqiang.space/tags/Linux/"},{"name":"kali","slug":"kali","permalink":"http://kouqiang.space/tags/kali/"},{"name":"软件安装","slug":"软件安装","permalink":"http://kouqiang.space/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"},{"name":"Typora","slug":"Typora","permalink":"http://kouqiang.space/tags/Typora/"},{"name":"快捷键","slug":"快捷键","permalink":"http://kouqiang.space/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"},{"name":"Vim编辑器","slug":"Vim编辑器","permalink":"http://kouqiang.space/tags/Vim%E7%BC%96%E8%BE%91%E5%99%A8/"},{"name":"git","slug":"git","permalink":"http://kouqiang.space/tags/git/"}]}